function k(){}const M=t=>t;function w(t,n){for(const e in n)t[e]=n[e];return t}function v(t){return t()}function F(){return Object.create(null)}function j(t){t.forEach(v)}function P(t){return typeof t=="function"}function S(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function U(t){return Object.keys(t).length===0}function b(t,...n){if(t==null){for(const o of n)o(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function A(t){let n;return b(t,e=>n=e)(),n}function B(t,n,e){t.$$.on_destroy.push(b(n,e))}function C(t,n,e,o){if(t){const r=y(t,n,e,o);return t[0](r)}}function y(t,n,e,o){return t[1]&&o?w(e.ctx.slice(),t[1](o(n))):e.ctx}function D(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const a=[],f=Math.max(n.dirty.length,r.length);for(let u=0;u<f;u+=1)a[u]=n.dirty[u]|r[u];return a}return n.dirty|r}return n.dirty}function G(t,n,e,o,r,a){if(r){const f=y(n,e,o,a);t.p(f,r)}}function H(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function I(t,n,e){return t.set(e),n}let i;function _(t){i=t}function m(){if(!i)throw new Error("Function called outside component initialization");return i}function J(t){m().$$.on_mount.push(t)}function K(t){m().$$.after_update.push(t)}const l=[],p=[];let s=[];const g=[],x=Promise.resolve();let h=!1;function E(){h||(h=!0,x.then(q))}function L(){return E(),x}function O(t){s.push(t)}const d=new Set;let c=0;function q(){if(c!==0)return;const t=i;do{try{for(;c<l.length;){const n=l[c];c++,_(n),z(n.$$)}}catch(n){throw l.length=0,c=0,n}for(_(null),l.length=0,c=0;p.length;)p.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];d.has(e)||(d.add(e),e())}s.length=0}while(l.length);for(;g.length;)g.pop()();h=!1,d.clear(),_(t)}function z(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function N(t){const n=[],e=[];s.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),s=n}export{K as a,p as b,B as c,C as d,D as e,A as f,H as g,I as h,O as i,P as j,M as k,F as l,q as m,k as n,J as o,U as p,N as q,j as r,S as s,L as t,G as u,i as v,_ as w,v as x,l as y,E as z};
